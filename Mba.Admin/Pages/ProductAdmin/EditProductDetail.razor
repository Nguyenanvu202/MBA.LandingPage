@page "/edit-product-detail"
@using Core.Models.Entity
@using Core.Models.Repository
@inject IProductDetailRepo _productDetailRepo
<PageTitle>Edit ProductDetail</PageTitle>

<RadzenColumn SizeMD=12>
    <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save ProductDetail</RadzenAlert>
    <RadzenTemplateForm TItem="ProductDetail" Data="@productDetail" Visible="@(productDetail != null)" Submit="@FormSubmit">
        
        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Name" Component="Name" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.Name" Name="Name" />
                <RadzenRequiredValidator Component="Name" Text="Name is required" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Image Url" Component="ImageUrl" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.ImageUrl" Name="ImageUrl" />
                <RadzenRequiredValidator Component="ImageUrl" Text="ImageUrl is required" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Code" Component="Code" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.Code" Name="Code" />
                <RadzenRequiredValidator Component="Code" Text="Code is required" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Status" Component="Status" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.Status" Name="Status" />
                <RadzenRequiredValidator Component="Status" Text="Status is required" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Description" Component="Description" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.Description" Name="Description" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Specifications" Component="Specifications" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.Specifications" Name="Specifications" />
            </RadzenColumn>
        </RadzenRow>


        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Created By" Component="CreatedBy" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.CreatedBy" Name="CreatedBy" />
                <RadzenRequiredValidator Component="CreatedBy" Text="CreatedBy is required" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Updated By" Component="UpdatedBy" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@productDetail.UpdatedBy" Name="UpdatedBy" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Created Date" Component="CreatedDate" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@productDetail.CreatedDate" Name="CreatedDate" />
                <RadzenRequiredValidator Component="CreatedDate" Text="CreatedDate is required" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Updated Date" Component="UpdatedDate" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@productDetail.UpdatedDate" Name="UpdatedDate" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
            <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick" />
        </RadzenStack>
    </RadzenTemplateForm>
</RadzenColumn>



@code {
    [Inject]
    protected IJSRuntime JSRuntime { get; set; }

    [Inject]
    protected NavigationManager NavigationManager { get; set; }

    [Inject]
    protected DialogService DialogService { get; set; }

    [Inject]
    protected TooltipService TooltipService { get; set; }

    [Inject]
    protected ContextMenuService ContextMenuService { get; set; }

    [Inject]
    protected NotificationService NotificationService { get; set; }

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        productDetail = await _productDetailRepo.GetProductDetailByIdAsync(Id);
    }
    protected bool errorVisible;
    protected ProductDetail productDetail;

    protected IEnumerable<Product> productsForProductId;


    protected int productsForProductIdCount;
    protected Product productsForProductIdValue;

    protected async Task FormSubmit()
    {
        @*try
        {
            await MbaDbService.UpdateProductDetail(id: Id, productDetail);
            DialogService.Close(productDetail);
        }
        catch (Exception ex)
        {
            errorVisible = true;
        }*@
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }
}
}
